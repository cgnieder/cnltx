% --------------------------------------------------------------------------
% the CNLTX bundle
%
%   LaTeX source code and output
%
% --------------------------------------------------------------------------
% Clemens Niederberger
% Web:    https://github.com/cgnieder/cnltx/
% E-Mail: contact@mychemistry.eu
% --------------------------------------------------------------------------
% Copyright 2013 Clemens Niederberger
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Clemens Niederberger.
% --------------------------------------------------------------------------
% The cnltx bundle consists of the files
%  - cnltx-base.sty, cnltx-example.sty cnltx-doc.cls, cnltx-csnames.sty,
%    cnltx-tools.sty
%  - cnltx_en.tex, cnltx_en.pdf
%  - README
% --------------------------------------------------------------------------
% If you have any ideas, questions, suggestions or bugs to report, please
% feel free to contact me.
% --------------------------------------------------------------------------
\def\cnltx@@date{2013/09/12}
\def\cnltx@@version{v0.3a}
\def\cnltx@@info{LaTeX examples the CN way}
\ProvidesPackage{cnltx-base}[\cnltx@@date\space \cnltx@@version\space \cnltx@@info]
\RequirePackage{pgfopts,etoolbox}

% --------------------------------------------------------------------------
% message handling
\def\cnltx@error@message{%
  For details have a look at the `cnltx' manual.}

\def\cnltx@create@message{%
  \@ifstar
    {\cnltx@create@message@aux{Class}}
    {\cnltx@create@message@aux{Package}}%
}

\def\cnltx@create@message@aux#1#2#3{%
  \ifstrequal{#3}{Error}
    {%
      \lowercase{\csdef{cnltx@#2@#3}}##1{%
        \csuse{#1#3}{cnltx-#2}{##1}{\cnltx@error@message}}%
    }{%
      \lowercase{\csdef{cnltx@#2@#3}}##1{%
        \csuse{#1#3}{cnltx-#2}{##1}}%
    }}
\cnltx@create@message{base}{Error}
\cnltx@create@message{base}{Warning}
\cnltx@create@message{base}{WarningNoLine}
\cnltx@create@message{base}{Info}

% --------------------------------------------------------------------------
% setup command
\newrobustcmd\setcnltx[1]{\pgfqkeys{/cnltx}{#1}}

% --------------------------------------------------------------------------
% expansion helpers and tokenlist manipulation:

\def\cnltx@par{\par}

\def\cnltx@ifsym#1#2{\@ifnextchar#1{\@firstoftwo{#2}}}
\def\cnltx@ifdash{\cnltx@ifsym{-}}
\def\cnltx@ifbang{\cnltx@ifsym{!}}

% \exp_args:Nx
\long\def\cnltx@fullexpand@arg#1#2{%
  \begingroup
  \edef\cnltx@x{\endgroup
    \noexpand#1{#2}%
  }%
  \cnltx@x
}

% \exp_args:Nxx
\let\cnltx@fullexpand@twoargs\@expandtwoargs

% \exp_args:NV
\long\def\cnltx@expand@arg#1#2{%
  \expandafter#1\expandafter{#2}%
}

\def\cnltx@stripbs{\expandafter\@gobble\string}

% \cnltx@if@in{tokenlist}{search}{true}{false}
\newrobustcmd\cnltx@if@in[2]{%
  \def\cnltx@ifin@tmp##1#2{}%
  \expandafter\ifblank\expandafter{\cnltx@ifin@tmp#1{}{}#2}
    {\@secondoftwo}
    {\@firstoftwo}%
}

% \cnltx@replace@once{macro}{search}{replace}
\newrobustcmd\cnltx@long@replace@once{\cnltx@replace@once@longorshort\long}
\newrobustcmd*\cnltx@replace@once{\cnltx@replace@once@longorshort\@empty}

\newrobustcmd\cnltx@replace@once@longorshort[4]{%
  \expandafter\cnltx@if@in\expandafter{#2}{#3}
    {%
      #1\def\cnltx@ro@tmp##1#3##2\q@stop{%
        \expandafter#1\expandafter\def\expandafter#2\expandafter{##1#4##2}%
      }%
      \expandafter\cnltx@ro@tmp#2\q@stop
    }
    {}%
}

% \cnltx@replace@all{macro}{search}{replace}
\newrobustcmd\cnltx@replace@all[3]{%
  \cnltx@replace@once#1{#2}{#3}%
  \expandafter\cnltx@if@in\expandafter{#1}{#2}
    {\cnltx@replace@all#1{#2}{#3}}
    {}%
}

\newrobustcmd\cnltx@long@replace@all[3]{%
  \cnltx@long@replace@once#1{#2}{#3}%
  \expandafter\cnltx@if@in\expandafter{#1}{#2}
    {\cnltx@long@replace@all#1{#2}{#3}}
    {}%
}

% \cnltx@remove@once{macro}{search}
\newrobustcmd\cnltx@remove@once[2]{\cnltx@replace@once#1{#2}{}}
\newrobustcmd\cnltx@long@remove@once[2]{\cnltx@long@replace@once#1{#2}{}}

% \cnltx@remove@all{macro}{search}
\newrobustcmd\cnltx@remove@all[2]{\cnltx@replace@all#1{#2}{}}
\newrobustcmd\cnltx@long@remove@all[2]{\cnltx@long@replace@all#1{#2}{}}

% --------------------------------------------------------------------------
% colors definitions:
\RequirePackage{xcolor}
\RequirePackage{trimspaces}

\xdefinecolor{cnltxbrown}{rgb}{0.60,0.25,0.15}
\xdefinecolor{cnltxblue}{rgb}{0.02,0.04,0.48}
\xdefinecolor{cnltxred}{rgb}{0.65,0.04,0.07}
\xdefinecolor{cnltxgreen}{rgb}{0.06,0.44,0.08}
\xdefinecolor{cnltxgray}{gray}{0.5}
\colorlet{cnltxyellow}{yellow!40!brown}
\xdefinecolor{cnltxformalblue}{rgb}{0,0.2,0.6}
\xdefinecolor{cnltxformalred}{rgb}{0.8,0.1,0.2}

% set a color-scheme for the manual:
\def\cnltx@define@colorscheme#1#2{%
  \csgdef{cnltx@color@scheme@#1}{}%
  \forcsvlist{\cnltx@get@color{#1}}{#2}%
}
\def\cnltx@get@color#1#2{\cnltx@get@color@aux{#1}#2\q@stop}
\def\cnltx@get@color@aux#1#2=>#3\q@stop{%
  \listcsgadd{cnltx@color@scheme@#1}{%
    \colorlet{\trim@spaces{#2}}{\trim@spaces{#3}}%
  }%
}

\def\cnltx@use@colorscheme#1{%
  \forlistcsloop{\@firstofone}{cnltx@color@scheme@#1}%
}

\pgfkeys{
  cnltx/.cd,
    color-scheme/.code = \cnltx@use@colorscheme{#1}
}

% predefined color-schemes:
\cnltx@define@colorscheme{default}{
  cs          => cnltxbrown ,
  option      => cnltxyellow ,
  module      => cnltxblue ,
  comment     => cnltxgray ,
  beginend    => red ,
  env         => black ,
  argument    => black ,
  meta        => black!80 ,
  cnltx       => cnltxred ,
  cnltxbg     => white ,
  link        => black!90 ,
  versionnote => black!75
}

\cnltx@define@colorscheme{blue}{
  cs          => cnltxbrown ,
  option      => cnltxgreen ,
  module      => cnltxred ,
  comment     => cnltxgray ,
  beginend    => red ,
  env         => black ,
  argument    => black ,
  meta        => black!80 ,
  cnltx       => cnltxblue ,
  cnltxbg     => yellow!10 ,
  link        => cnltx ,
  versionnote => black!75
}

\cnltx@define@colorscheme{formal}{
  cs          => black ,
  option      => cnltxformalblue ,
  module      => cnltxblue ,
  comment     => cnltxgray ,
  beginend    => red ,
  env         => black ,
  argument    => black ,
  meta        => black!80 ,
  cnltx       => cnltxformalblue ,
  cnltxbg     => white ,
  link        => black!90 ,
  versionnote => black!75
}

% set the default:
\setcnltx{color-scheme=default}

\endinput

% --------------------------------------------------------------------------
HISTORY:

2013/09/08 v0.1 - first working version
2013/09/10 v0.2 - added `cnltx-tools' to the bundle
                - extended the messaging creation to class messages
2013/09/12 v0.3 - added index style file `cnltx.ist'
                - added color `module'
                - added \cnltx@remove@once and \cnltx@remove@all
                - added long versions of tokenlist manipulation macros

