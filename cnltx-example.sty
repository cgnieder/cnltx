% --------------------------------------------------------------------------
% the CNLTX bundle
%
%   LaTeX source code and output
%
% --------------------------------------------------------------------------
% Clemens Niederberger
% Web:    https://github.com/cgnieder/cnltx/
% E-Mail: contact@mychemistry.eu
% --------------------------------------------------------------------------
% Copyright 2013 Clemens Niederberger
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Clemens Niederberger.
% --------------------------------------------------------------------------
% The cnltx bundle consists of the files
%  - cnltx-base.sty, cnltx-example.sty cnltx-doc.cls, cnltx-csnames.sty
%  - cnltx_en.tex, cnltx_en.pdf
%  - README
% --------------------------------------------------------------------------
% If you have any ideas, questions, suggestions or bugs to report, please
% feel free to contact me.
% --------------------------------------------------------------------------
\RequirePackage{cnltx-base}
\ProvidesPackage{cnltx-example}[\cnltx@@date\space \cnltx@@version\space \cnltx@@info]
\RequirePackage{cnltx-csnames}

\cnltx@create@message{example}{Error}
\cnltx@create@message{example}{Warning}
\cnltx@create@message{example}{WarningNoLine}
\cnltx@create@message{example}{Info}

% --------------------------------------------------------------------------
\RequirePackage{listings}
\PassOptionsToPackage{framemethod=tikz}{mdframed}
\RequirePackage{mdframed}
\RequirePackage{idxcmds}

% --------------------------------------------------------------------------
% who knows what they might be good for -- well, for indexing:
\newrobustcmd*\cnltxat{@}
\let\cnltxletterat\cnltxat
\makeatother
\newrobustcmd*\cnltxotherat{@}
\makeatletter
\newrobustcmd*\cnltxbang{!}
\newrobustcmd*\cnltxequal{=}

% --------------------------------------------------------------------------
% \code
\newcommand*\code[1]{\begingroup\codefont#1\endgroup}
\newcommand*\codefont{\ttfamily}
\pgfkeys{
  cnltx/.cd,
    code-font/.code = \renewcommand*\codefont{#1} ,
}

% --------------------------------------------------------------------------
% command descriptions:
% \cs
\newidxcmd\cs{\code{\textbackslash\textcolor{cs}{#1}}}

% see http://tex.stackexchange.com/a/114580/5049 for reference on the `nolig'
% trick, thanks to @egreg!

\newcommand\indexcs[1]{%
  \begingroup
    \let\lst@nolig\@empty
    \def\cnltx@tmp@index{#1}%
    \expandafter\cnltx@replace@all
      \expandafter\cnltx@tmp@index
      \expandafter{\cnltxotherat}{\cnltxat}%
    \cnltx@replace@all\cnltx@tmp@index{@}{\cnltxat}%
    \expandafter\csidx\expandafter{\cnltx@tmp@index}%
  \endgroup
}

% \env
\newidxcmd\env{\code{#1}}[\ (environment)]
% \begin, \end
\newidxcmd\beginend{\code{\textbackslash\textcolor{beginend}{#1}}}
\def\beginenv{\@ifstar{\beginend*{begin}}{\beginend{begin}}}
\def\endenv{\@ifstar{\beginend*{end}}{\beginend{end}}}

% --------------------------------------------------------------------------
% option descriptions:
\def\cnltx@isvalue{%
  \nobreak\hskip.3333em plus .1667em =\hskip.3333em plus .1667em }

% \option
\newidxcmd\option{\code{\textcolor{option}{#1}}}
\newcommand*\key{\@ifstar{\cnltx@key@star}{\cnltx@key@nostar}}

\def\cnltx@key@star{%
  \cnltx@ifdash
    {\cnltx@key@aux*\meta}
    {\cnltx@key@aux*\marg}%
}
\def\cnltx@key@nostar{%
  \cnltx@ifdash
    {\cnltx@key@aux{}\meta}
    {\cnltx@key@aux{}\marg}%
}
\def\cnltx@key@aux#1#2#3#4{%
  \code{\option#1{#3}\cnltx@isvalue#2{#4}}%
}

% \DeclareListParser*\cnltx@choices{|}
\newcommand*\choices[1]{%
  \def\cnltx@choice@sep{\def\cnltx@choice@sep{|\hskip\z@}}%
  \forcsvlist{\cnltx@choice@sep\code}{#1}%
}

\RequirePackage[normalem]{ulem}
\newcommand*\default[1]{\uline{#1}}

\newcommand*\choicekey{%
  \@ifstar
    {\cnltx@choicekey@star}
    {\cnltx@choicekey@nostar}%
}
\def\cnltx@choicekey@star#1#2{%
  \code{\option*{#1}\cnltx@isvalue\choices{#2}}}
\def\cnltx@choicekey@nostar#1#2{%
  \code{\option{#1}\cnltx@isvalue\choices{#2}}}

\newcommand*\boolkey{%
  \@ifstar
    {\cnltx@boolkey@star}
    {\cnltx@boolkey@nostar}%
}

\def\cnltx@boolkey@star#1{\choicekey*{#1}{\default{true},false}}
\def\cnltx@boolkey@nostar#1{\choicekey{#1}{\default{true},false}}

% --------------------------------------------------------------------------
% argument descriptions:
% \meta
\newcommand*\meta[1]{%
  $\langle$%
    \textcolor{meta}{{\argumentformat#1}}%
  $\rangle$%
}

% arguments:
\newcommand*\argumentformat{\normalfont\itshape}

\pgfkeys{
  cnltx/.cd,
    arg-format/.code = \renewcommand*\argumentformat{#1} ,
}

\newcommand*\newarg[3]{%
  \newcommand*#1[1]{%
    \code{\textcolor{argument}{%
      #2\textnormal{\ifblank{##1}{}{\meta{##1}}}#3}}%
  }%
}

\newarg\marg{\{}{\}}
\newarg\oarg{[}{]}
\newarg\darg{(}{)}
\newcommand*\sarg{\textcolor{argument}{\code{*}}}

% --------------------------------------------------------------------------
% source code examples:
% format of the source code:
\newcommand*\sourceformat{\codefont\small}
% format of the iput example:
\newcommand*\exampleformat{}

\pgfkeys{
  cnltx/.cd,
    source-format/.code = \renewcommand*\sourceformat{#1} ,
    expl-format/.code = \renewcommand*\exampleformat{#1} ,
}

\PassOptionsToPackage{space=true}{accsupp}
\RequirePackage{accsupp}
\newcommand\cnltx@copyablespace{%
\BeginAccSupp{method=hex,unicode,ActualText=00A0}%
  \ %
\EndAccSupp{}%
}

\lst@RequireAspects{writefile}
\providecommand*\MakePercentComment{\catcode`\%14\relax}

\def\cnltx@gobble{2}

% listings style for source code:
\def\cnltx@listings@style{
  language         = [LaTeX]TeX,
  basicstyle       = {\sourceformat},
  numbers          = left,
  numberstyle      = \tiny,
  xleftmargin      = 1em,
  gobble           = \cnltx@gobble ,
  columns          = fullflexible,
  literate         =
    {ä}{{\"a}}1
    {ö}{{\"o}}1
    {ü}{{\"u}}1
    {Ä}{{\"A}}1
    {Ö}{{\"O}}1
    {Ü}{{\"U}}1
    {ß}{{\ss}}1 ,
  breaklines       = true,
  keepspaces       = true,
  breakindent      = 1em,
  commentstyle     = \color{comment},
  keywordstyle     = \color{cs},
  deletetexcs      =
    {
      a,o,u,A,O,U,
      begin,
      center,
      description,document,
      end,enumerate,
      figure,flushleft,flushright,
      itemize,
      otherlanguage,
      table,tabu,tabular
    },
  % \begin, \end:
  texcsstyle       = [2]\color{beginend},
  index            = [2][texcs2],
  indexstyle       = [2]\@gobble,
  moretexcs        = [2]{begin,end},
  % environments:
  texcsstyle       = [3]\color{env},
  index            = [3][texcs3],
  indexstyle       = [3]\@gobble,
  % control sequences:
  texcsstyle       = [4]\color{cs},
  index            = [4][texcs4],
  indexstyle       = [4]\@gobble ,
  % added control sequences:
  texcsstyle       = [5]\color{cs},
  index            = [5][texcs5],
  indexstyle       = [5]\indexcs,
  % added environments:
  texcsstyle       = [6]\color{env},
  index            = [6][texcs6],
  indexstyle       = [6]\envidx,
  %  moretexcs    = {keyword,cs,code,marg}% add possibility to add more
  % also prove different classes for indexing
}

\cnltx@fullexpand@twoargs
  \lstdefinestyle
  {cnltx}
  {\expandonce\cnltx@listings@style}

\def\cnltx@addcmds#1{%
  \cnltx@fullexpand@twoargs
    \lstdefinestyle
      {cnltx}
      {\expandonce\cnltx@listings@style,\unexpanded{moretexcs={[5]#1}}}%
  \edef\cnltx@listings@style{%
    \expandonce\cnltx@listings@style,\unexpanded{moretexcs={[5]#1}}%
  }%
}

\def\cnltx@addsilentcmds#1{%
  \cnltx@fullexpand@twoargs
    \lstdefinestyle
      {cnltx}
      {\expandonce\cnltx@listings@style,\unexpanded{moretexcs={[4]#1}}}%
  \edef\cnltx@listings@style{%
    \expandonce\cnltx@listings@style,\unexpanded{moretexcs={[4]#1}}%
  }%
}
\cnltx@expand@arg
  \cnltx@addsilentcmds
  \cnltx@predefined@control@sequences

\def\cnltx@addenvs#1{%
  \cnltx@fullexpand@twoargs
    \lstdefinestyle
      {cnltx}
      {\expandonce\cnltx@listings@style,\unexpanded{moretexcs={[6]#1}}}%
  \edef\cnltx@listings@style{%
    \expandonce\cnltx@listings@style,\unexpanded{moretexcs={[6]#1}}%
  }%
}

\def\cnltx@addsilentenvs#1{%
  \cnltx@fullexpand@twoargs
    \lstdefinestyle
      {cnltx}
      {\expandonce\cnltx@listings@style,\unexpanded{moretexcs={[3]#1}}}%
  \edef\cnltx@listings@style{%
    \expandonce\cnltx@listings@style,\unexpanded{moretexcs={[3]#1}}%
  }%
}

\cnltx@expand@arg
  \cnltx@addsilentenvs
  \cnltx@predefined@environments

\def\cnltx@addlistingsoptions#1{%
  \cnltx@fullexpand@twoargs
    \lstdefinestyle
      {cnltx}
      {\expandonce\cnltx@listings@style,\unexpanded{#1}}%
  \edef\cnltx@listings@style{%
    \expandonce\cnltx@listings@style,\unexpanded{#1}%
  }%
}

\newcommand\cnltx@example@input{%
  \trivlist\item\relax
  % don't know why this is necessary but it is:
  \catcode`\^^M=5\relax
  % want special formatting for the input example:
  \exampleformat
  % we're in a list so the first paragraph is not indented; let's make the
  % input example be the second paragraph:
  \if@minipage\else
    \par\mbox{}\par\vskip-\baselineskip\relax
  \fi
  \input{\jobname.tmp}%
  \endtrivlist
}

\def\cnltx@mdframed@options
  {
    backgroundcolor = cnltxbg ,
    linecolor       = cnltx ,
    roundcorner     = 5pt
  }
\cnltx@fullexpand@twoargs
  \mdfdefinestyle
  {cnltx}
  {\expandonce\cnltx@mdframed@options}

\def\cnltx@addmdframedoptions#1{%
  \cnltx@fullexpand@twoargs
    \mdfdefinestyle
      {cnltx}
      {\expandonce\cnltx@mdframed@options,\unexpanded{#1}}%
}

\newbool{cnltx@sidebyside}
\newbool{cnltx@codeonly}

\pgfkeys{
  cnltx/.cd,
    side-by-side/.is if        = cnltx@sidebyside ,
    code-only/.is if           = cnltx@codeonly ,
    code-sep/.code             = \def\cnltx@examplesep{#1} ,
    add-frame-options/.code    = \cnltx@addmdframedoptions{#1} ,
    frame-options/.code        = \mdfdefinestyle{cnltx}{#1} ,
    gobble/.code               = \def\cnltx@gobble{#1} ,
    add-cmds/.code             = \cnltx@addcmds{#1} ,
    add-silent-cmds/.code      = \cnltx@addsilentcmds{#1} ,
    add-listings-options/.code = \cnltx@addlistingsoptions{#1} ,
    listings-options/.code     = \lstdefinestyle{cnltx}{#1} ,
    add-envs/.code             = \cnltx@addenvs{#1} ,
    add-silent-envs/.code      = \cnltx@addsilentenvs{#1} ,
}

\newcommand*\cnltx@examplesep{\hrulefill}

% the source code and output example:
\lstnewenvironment{example}[1][]
  {%
    % set options
    \pgfqkeys{/cnltx}{#1}%
    \lstset{style=cnltx}%
    %
    \mdframed[style=cnltx]%
      \ifbool{cnltx@codeonly}{}{%
        \ifbool{cnltx@sidebyside}
          {\minipage[c]{.49\linewidth}}
          {}%
        }%
      \lst@BeginAlsoWriteFile{\jobname.tmp}
  }
  {%
      \lst@EndWriteFile
      \ifbool{cnltx@codeonly}{}{%
        \ifbool{cnltx@sidebyside}
          {\endminipage\hfill\minipage[c]{.49\linewidth}}
          {\noindent\cnltx@examplesep}%
        \cnltx@example@input
        \ifbool{cnltx@sidebyside}
          {\endminipage}
          {}%
        }%
    \endmdframed
    \ignorespacesafterend
}

\lstnewenvironment{sourcecode}[1][]
  {%
    % set options
    \pgfqkeys{/cnltx}{#1}%
    \lstset{style=cnltx}%
    %
    \mdframed[style=cnltx]%
      \lst@BeginAlsoWriteFile{\jobname.tmp}
  }
  {%
      \lst@EndWriteFile
    \endmdframed
    \ignorespacesafterend
}

% --------------------------------------------------------------------------
% packages and classes:
\newcommand*\packageformat{\sffamily}
\newcommand*\classformat{\sffamily}

\newidxcmd\pkg{{\packageformat#1}}[\ (package)]
\newidxcmd\cls{{\classformat#1}}[\ (class)]

\pgfkeys{
  cnltx/.cd,
    pkg-format/.code = \renewcommand*\packageformat{#1} ,
    cls-format/.code = \renewcommand*\classformat{#1}
}

\endinput
